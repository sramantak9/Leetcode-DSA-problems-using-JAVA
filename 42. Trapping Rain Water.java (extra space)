class Solution {
    public int trap(int[] height) {
        int n=height.length;
        int lMax[]=new int[n];
        int rMax[]=new int [n];
        lMax[0]=height[0];
        int maxi=height[0];
        for(int i=1;i<n;i++)
        {
           maxi=Math.max(maxi,height[i]);
           lMax[i]=maxi;
        }
        rMax[n-1]=height[n-1];
         maxi=height[n-1];
        for(int i=n-2;i>=0;i--)
        {
            maxi=Math.max(maxi,height[i]);
            rMax[i]=maxi;
        }
        
        int sumTotal=0;
        for(int i=0;i<n;i++)
        {
            
            int currStorage=Math.min(lMax[i],rMax[i]);
            System.out.println(currStorage);
            sumTotal+=(currStorage-height[i]);
            
        }
        return sumTotal;

    }
    
        

    
}
